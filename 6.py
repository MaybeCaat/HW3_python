# создаём функцию IsSymmetric, которая на вход принимает двумерный массив
# (не особо понятно по условию, если не так нужно вводить - могу исправить)
# и записывает в переменную input_array
def IsSymmetric(input_array):
    # так как число n (длина массива n на n) нам не даётся, получим его вручную с помощью длины массива
    # (а именно количества списков внутри основного списка input_array)
    array_size = len(input_array)
    # возьмём к примеру симметричный массив
    # 0 1 2
    # 1 2 3
    # 2 3 4
    # для проверки, что массив симметричный, достаточно проверить верхний треугольник (1 2 3) и нижний (1 2 3)
    # на симметричность, (так как центральная диагональ ничему не симметрична)
    # то есть числа в них должны быть расположены противоположными индексами,
    # например [0][1] и [1][0] для "1" в данном примере
    # поэтому запускаем цикл по всем строкам
    for i in range(array_size):
        # а затем по всем столбцам в этой строке, при этом проходимся по столбцам от i + 1,
        # так как проходимся мы по верхнему треугольнику, а не всему массиву
        for j in range(i + 1, array_size):
            # проверяем противоположные индексы (соответствующие индексы у верхнего и нижнего треугольника),
            # если они не равны, то значит массив не симметричен
            if input_array[i][j] != input_array[j][i]:
                # массив считается несимметричным при одном несовпадении симметричности, поэтому
                # если видим хоть одно несовпадение - возвращаем NO
                return "NO"
    # до сюда мы доходим только если ни разу не сработало условие на несовпадение в цикле,
    # а значит весь массив симметричен и возвращаем YES
    return "YES"
